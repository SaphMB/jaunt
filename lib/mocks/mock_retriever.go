// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SaphMB/jaunt/lib/retriever (interfaces: Retriever)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	swagger "github.com/SaphMB/jaunt/lib/swagger"
	gomock "github.com/golang/mock/gomock"
)

// MockRetriever is a mock of Retriever interface.
type MockRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockRetrieverMockRecorder
}

// MockRetrieverMockRecorder is the mock recorder for MockRetriever.
type MockRetrieverMockRecorder struct {
	mock *MockRetriever
}

// NewMockRetriever creates a new mock instance.
func NewMockRetriever(ctrl *gomock.Controller) *MockRetriever {
	mock := &MockRetriever{ctrl: ctrl}
	mock.recorder = &MockRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRetriever) EXPECT() *MockRetrieverMockRecorder {
	return m.recorder
}

// GetLoggedInAthleteActivities mocks base method.
func (m *MockRetriever) GetLoggedInAthleteActivities(arg0 context.Context, arg1 *swagger.ActivitiesApiGetLoggedInAthleteActivitiesOpts) ([]swagger.SummaryActivity, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoggedInAthleteActivities", arg0, arg1)
	ret0, _ := ret[0].([]swagger.SummaryActivity)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLoggedInAthleteActivities indicates an expected call of GetLoggedInAthleteActivities.
func (mr *MockRetrieverMockRecorder) GetLoggedInAthleteActivities(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoggedInAthleteActivities", reflect.TypeOf((*MockRetriever)(nil).GetLoggedInAthleteActivities), arg0, arg1)
}
